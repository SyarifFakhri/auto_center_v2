//
// Patch 01 - Adjust eclipse value based on conversion gain
//
// 1. Anti-eclipse control as a function of conversion gain
//		PATCHVARS_ECLIPSE_ADAPTATION_CGAIN_LOW	- Eclipse value for low conversion gain
//		PATCHVARS_ECLIPSE_ADAPTATION_CGAIN_HIGH - Eclipse value for high conversion gain
//
//
//
//

[Patch 0100; CRITICAL ; Adjust eclipse value based on conversion gain ]
Load=Load Patch 0100
Load=Apply Patch 0100


[Load Patch 0100]
// Allocate memory to hold the patch
FIELD_WR= CMD_HANDLER_PARAMS_POOL_0, 0x0
FIELD_WR= CMD_HANDLER_PARAMS_POOL_1, 0xa0
FIELD_WR= COMMAND_REGISTER, 0x8706
POLL_FIELD= COMMAND_REGISTER, DOORBELL, !=0, DELAY=10, TIMEOUT=100
PYTHON= if reg.COMMAND_REGISTER.HOST_COMMAND.uncached_value != 0: print('Failed to allocate memory for patch: Result Status = 0x{:02X}'.format(reg.COMMAND_REGISTER.HOST_COMMAND.uncached_value), file=sys.stderr)

// Write the patch contents
FIELD_WR= PHYSICAL_ADDRESS_ACCESS, 0x0000 //Enable physical address access
REG_BURST= 0xd7b8, 0xc0f1, 0x72cf, 0x0000, 0x147e, 0x7a40, 0xe88a, 0x71cf, 0xff00, 0x3ed0, 0x9144, 0x71cf, 0xffff, 0xd846, 0xb140, 0xc0d1, 0x7ee0, 0xc0f1, 0xc5e1, 0x73cf, 0x0001, 0x2242, 0x7b60, 0x7548, 0x70cf
REG_BURST= 0xd7e8, 0xffff, 0xd846, 0x9000, 0x0831, 0x0f80, 0x0000, 0xbadd, 0x2046, 0x03c0, 0x71cf, 0xffff, 0xcd70, 0x8924, 0xed08, 0x2186, 0x03fc, 0xb944, 0x7825, 0x7810, 0xf004, 0xb9c3, 0x7825, 0x71cf, 0xff00
REG_BURST= 0xd818, 0x3ed0, 0xb104, 0x07bd, 0x0b80, 0xd900, 0xf00a, 0x70cf, 0xffff, 0xd848, 0x7835, 0x8041, 0x8000, 0xe102, 0xa040, 0x09f1, 0x8114, 0xd952, 0x70cf, 0xffff, 0xcd70, 0xa824, 0x7fe0, 0xd800, 0xbadd
REG_BURST= 0xd848, 0xffff, 0xd35c, 0xffff, 0xd7b8, 0xffff, 0xd718, 0xffff, 0xd7d8
FIELD_WR= LOGICAL_ADDRESS_ACCESS, 0x0000

[Apply Patch 0100]
// Write params and apply the patch
FIELD_WR= CMD_HANDLER_PARAMS_POOL_0, 0x0068
FIELD_WR= CMD_HANDLER_PARAMS_POOL_1, 0x0100
FIELD_WR= CMD_HANDLER_PARAMS_POOL_2, 0x9003
FIELD_WR= CMD_HANDLER_PARAMS_POOL_3, 0x0102
FIELD_WR= CMD_HANDLER_PARAMS_POOL_4, 0x00a0
FIELD_WR= COMMAND_REGISTER, 0x8702
POLL_FIELD= COMMAND_REGISTER,DOORBELL,!=0,DELAY=10,TIMEOUT=100
PYTHON= if reg.COMMAND_REGISTER.HOST_COMMAND.uncached_value != 0: print('Apply Patch command rejected: Result Status = 0x{:02X}'.format(reg.COMMAND_REGISTER.HOST_COMMAND.uncached_value), file=sys.stderr)

// Check apply status
FIELD_WR= COMMAND_REGISTER, 0x8701
POLL_FIELD= COMMAND_REGISTER,DOORBELL,!=0,DELAY=10,TIMEOUT=100

// Check patch was applied successfully
PYTHON= if reg.COMMAND_REGISTER.HOST_COMMAND.uncached_value != 0: print('Failed to apply patch: Result Status = 0x{:02X}'.format(reg.COMMAND_REGISTER.HOST_COMMAND.uncached_value), file=sys.stderr)
